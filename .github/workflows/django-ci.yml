name: NewsHub

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: ${{ secrets.DB_NAME }}
          POSTGRES_USER: ${{ secrets.DB_USER }}
          POSTGRES_PASSWORD: ${{ secrets.DB_PASSWORD }}
          HOST: localhost
        port:
          - "5432:5432"
        options: >-
          --health-cmd "pg_isready -U NewsHub_admin"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5 
      env:

        DEBUG: ${{ secrets.DEBUG }}
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        DB_NAME: ${{ secrets.DB_NAME }}
        DB_USER: ${{ secrets.DB_USER }}
        DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        STRIPE_PUBLIC_KEY: ${{ secrets.STRIPE_PUBLIC_KEY }}
        STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        DB_HOST: localhost

      steps:
        - uses: actions/checkout@v2
        - name: Set up Python 3.11
          uses: actions/setup-python@v2
          with:
            python-version: 3.11
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt
        - name: Wait for Postgres
          run: |
            until pg_isready -h ${{ env.DB_HOST }} -U ${{ env.DB_USER }}; do
            echo "Waiting for Postgres..."
            sleep 2
            done

        - name: Run migrations
          run: python manage.py migrate
          env:
            DB_NAME: ${{ env.DB_NAME }}
            DB_USER: ${{ env.DB_USER }}
            DB_PASSWORD: ${{ env.DB_PASSWORD }}
            DB_HOST: ${{ env.DB_HOST }}

        - name: Run tests
          run: python manage.py test

